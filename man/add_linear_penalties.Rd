% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_linear_penalties.R
\name{add_linear_penalties}
\alias{add_linear_penalties}
\alias{add_linear_penalties,ConservationProblem,ANY,Matrix-method}
\alias{add_linear_penalties,ConservationProblem,ANY,matrix-method}
\alias{add_linear_penalties,ConservationProblem,ANY,dgCMatrix-method}
\alias{add_linear_penalties,ConservationProblem,ANY,character-method}
\alias{add_linear_penalties,ConservationProblem,ANY,numeric-method}
\alias{add_linear_penalties,ConservationProblem,ANY,Raster-method}
\title{Add linear penalties}
\usage{
\S4method{add_linear_penalties}{ConservationProblem,ANY,character}(x, penalty, data)

\S4method{add_linear_penalties}{ConservationProblem,ANY,numeric}(x, penalty, data)

\S4method{add_linear_penalties}{ConservationProblem,ANY,matrix}(x, penalty, data)

\S4method{add_linear_penalties}{ConservationProblem,ANY,Matrix}(x, penalty, data)

\S4method{add_linear_penalties}{ConservationProblem,ANY,dgCMatrix}(x, penalty, data)
}
\arguments{
\item{x}{\code{\link{ConservationProblem-class}} object.}

\item{penalty}{\code{numeric} penalty value that is used to scale the
importance avoiding planning units with high \code{data} values.
Higher \code{penalty} value can be used to obtain solutions that
are strongly averse to selecting places with high \code{data}
values, and smaller \code{penalty} values can be used to obtain solutions
that avoid places with high \code{data} values. Note that negative
\code{penalty} values can be used to obtain solutions that prefer places
with high \code{data} values. Additionally, when adding these
penalties to problems with multiple zones, the argument to \code{penalty}
must have a value for each zone.}

\item{data}{\code{character}, \code{numeric},
\code{\link[raster]{Raster-class}}, \code{matrix}, or \code{Matrix} object
containing the data used to penalize solutions. Planning units that are
associated with higher data values are penalized more strongly
in the solution. See the Details section for more information.}
}
\description{
Add penalties to a conservation planning \code{\link{problem}} to penalize
solutions that select planning units according to a specific metric
(e.g. anthropogenic impact).
}
\details{
This function penalizes solutions that have higher values according
  to a specific metric. The argument to \code{data} can be specified in
  several different ways:

  \describe{

  \item{\code{character}}{field (column) name(s) that contain the data for
    penalizing planning units. This type of argument is only
    compatible if the planning units in the argument to \code{x} are a
    \code{\link[sp]{Spatial-class}}, \code{\link[sf]{sf}}, or
    \code{data.frame} object. The fields (columns) must have \code{numeric}
    values, and must not contain any missing (\code{NA}) values.
    For problems involving multiple zones, the argument to \code{data} must
    contain a field name for each zone.}

  \item{\code{numeric}}{\code{vector} containing the data for penalizing
    each planning unit. These values must not contain any missing
    (\code{NA}) values. Note that this type of argument is only available
    for planning units that contain a single zone.}

  \item{\code{\link[raster]{Raster-class}}}{containing the data for
    penalizing planning units. The specific penalty data value associated
    with each planning unit is calculated as the sum of the overlapping
    values in the argument to \code{data}. For problems involving multiple
    zones, the argument to \code{data} must contain a layer for each zone.
    If a planning unit only overlaps with missing \code{NA} values
    or doesn't overlap with any pixels in the argument to \code{data},
    then an error will be thrown.}

  \item{\code{matrix}, \code{Matrix}}{where columns correspond to
    different planning units and rows correspond to different zones.
    These values must not contain any missing (\code{NA}) values.}

  }

 The linear penalties are calculated using the following equations.
 Let \eqn{I} denote the set of planning units
 (indexed by \eqn{i}), \eqn{Z} the set of management zones (indexed by
 \eqn{z}), and \eqn{X_{iz}}{Xiz} the decision variable for allocating
 planning unit \eqn{i} to zone \eqn{z} (e.g. with binary
 values one indicating if planning unit is allocated or not). Also, let
 \eqn{P_z} represent the penalty scaling value for zones
 \eqn{z \in Z}{z in Z} (argument to \code{penalty}), and
 \eqn{D_{iz}}{Diz} the penalty data for allocating planning unit
 \eqn{i \in I}{i in I} to zones \eqn{z \in Z}{z in Z} (argument to
 \code{data} if supplied as a matrix object). The penalties are calculated

 \deqn{
 \sum_{i}^{I} \sum_{z}^{Z} -P_z \times D_{iz} \times X_{iz}
 }{
 sum_i^I sum_z^Z (-Pz * Diz * Xiz)
 }

 Note that when the problem objective is to maximize some measure of
 benefit and not minimize some measure of cost, the term \eqn{P_z} is
 replaced with \eqn{-P_z}.
}
\examples{
# TODO

}
